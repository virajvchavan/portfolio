{"componentChunkName":"component---node-modules-gatsby-theme-jxnblk-src-templates-post-js","path":"/blog/omni-search/","result":{"data":{"post":{"id":"e43ffe81-ea14-52bc-aa71-43a284e8bb3d","date":"August 07, 2019","title":"Search your website directly from Chrome’s Omnibox","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Search your website directly from Chrome’s Omnibox\",\n  \"date\": \"2019-08-07T00:00:00.000Z\",\n  \"importance\": 5,\n  \"tags\": [\"search-engines\", \"web browsers\", \"web development\"],\n  \"excerpt\": \"You might have searched for YouTube videos directly from Chrome’s Omnibar. Implement similar functionality for your website.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"You might have searched for YouTube videos directly from Chrome\\u2019s Omnibar.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"You start typing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"youtube.com\"), \" and the Omnibar shows a little message: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Press Tab to Search YouTube\")), mdx(\"img\", {\n    src: \"/omni-search/omni1.png\",\n    role: \"presentation\"\n  }), mdx(\"p\", null, \"And when you do press the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Tab\"), \" key, it lets you search YouTube directly, without needing to visit the site.\"), mdx(\"p\", null, \"Some websites also show you the search suggestions provided by them instead of the default search engine\\u2019s suggestions.\"), mdx(\"img\", {\n    src: \"/omni-search/omni2.png\",\n    role: \"presentation\"\n  }), mdx(\"p\", null, \"Wikipedia providing its own search suggestions\"), mdx(\"p\", null, \"Ever wondered if you can implement the same for your own website? Turns out, it\\u2019s quite easy!\"), mdx(\"p\", null, \"Here\\u2019s how.\"), mdx(\"h2\", null, \"1\", \".\", \" Create a search results page\"), mdx(\"p\", null, \"First, your website needs to have a page which can show search results for a query. (You already might have one).  \", mdx(\"br\", null), \" For example,\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://yourwebsite.com/search?q={searchTerms}\"), \" \", mdx(\"br\", null), \"\\nHow you handle search queries and show the results is completely up to you.\"), mdx(\"h2\", null, \"2\", \".\", \" Define where your searches should be directed\"), mdx(\"p\", null, \"To tell the browser that your website can accept search queries through the search bar, you just need to write a simple XML file.\"), mdx(\"img\", {\n    src: \"/omni-search/omni3.png\",\n    role: \"presentation\"\n  }), mdx(\"p\", null, \"The most important part of the document is this tag:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Url type=\\\"text/html\\\" method=\\\"get\\\" template=\\\"http://yourwebsite.com/search?q={searchTerms}\\\" />\")), mdx(\"p\", null, \"This is the URL the browser will redirect the search queries to. When the user presses enter in the Omnibox the string \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"{searchTerms}\"), \" in the url is replaced with the string the user typed.\"), mdx(\"h2\", null, \"3\", \".\", \" Let the browsers know\"), mdx(\"p\", null, \"On your site\\u2019s homepage, provide a link to the file you created. Place it in the head of the html file. For example:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"<head>  \\n <link type=\\\"application/opensearchdescription+xml\\\" rel=\\\"search\\\"  \\n       href=\\\"/url\\\\_of\\\\_xml\\\\_file\\\"/>  \\n</head>\\n\")), mdx(\"p\", null, \"And that\\u2019s it!\"), mdx(\"p\", null, \"With this setup, your website is searchable through Chrome\\u2019s Omnibar.\"), mdx(\"p\", null, \"Do note that Chrome enables it for a website only after user visits the website for the first time. It also adds the website as a Search Engine Provider in its settings as an option.\"), mdx(\"h2\", null, \"4\", \".\", \" Enable search suggestions\"), mdx(\"p\", null, \"To make things better, we can show some search suggestions as the user types the search query. Let\\u2019s implement that as well.\"), mdx(\"p\", null, \"First, create a suggestion service on your website which will accept a search query and return suggestions.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"It should always return a JSON array of results, with the first result being the original search query.\"), mdx(\"p\", null, \"For example, if I hit the API \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[https://yourwebsite.com/suggestions?q=g](https://yourwebsite.com/suggestions?q=cat,)it\"), \" , the response should be a valid JSON array like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"['git', 'github', 'gitlab', 'git commands', 'github login']\")), mdx(\"p\", null, \"Now add this tag to the XML document we created:\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Url type=\\\"application/x-suggestions+json\\\" method=\\\"get\\\" rel=\\\"suggestions\\\" template=\\\"http://yourwebsite.com/suggestions?q={searchTerms}\\\" />\")), mdx(\"p\", null, \"The omnibox will now use your suggestion service to provide query suggestions based on the user\\u2019s partial query.\"), mdx(\"hr\", null), mdx(\"p\", null, \"The XML file we created is called an \", mdx(\"a\", {\n    href: \"http://www.opensearch.org/Specifications/OpenSearch/1.1#OpenSearch_description_document\",\n    target: \"_blank\"\n  }, \"OpenSearch description document\"), \". A specification for such functionality is created by \", mdx(\"a\", {\n    href: \"https://github.com/dewitt/opensearch\",\n    target: \"_blank\"\n  }, \"OpenSearch\"), \". It has defined simple formats which the browsers can implement.\"), mdx(\"p\", null, \"So ideally this should work on all browsers! Although the way browsers implement this visually may be different. For example, \", mdx(\"a\", {\n    href: \"https://support.mozilla.org/en-US/kb/add-or-remove-search-engine-firefox\",\n    target: \"_blank\"\n  }, \"Firefox implements\"), \" it in a separate search bar next to its address bar.\"), mdx(\"img\", {\n    src: \"/omni-search/omni4.png\",\n    role: \"presentation\"\n  }), mdx(\"p\", null, \"How Firefox implements OpenSearch\"), mdx(\"p\", null, \"The \", mdx(\"a\", {\n    href: \"http://www.opensearch.org/Specifications/OpenSearch/1.1#OpenSearch_description_document\",\n    target: \"_blank\"\n  }, \"document\"), \" we created was the bare minimum needed for this example. For more details, see the \", mdx(\"a\", {\n    href: \"https://github.com/dewitt/opensearch/blob/master/opensearch-1-1-draft-6.md#opensearch-description-document\",\n    target: \"_blank\"\n  }, \"detailed specification\"), \".\"), mdx(\"hr\", null), mdx(\"h2\", null, \"References\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    target: \"_blank\",\n    href: \"https://github.com/dewitt/opensearch\"\n  }, \"OpenSearch Documentation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    target: \"_blank\",\n    href: \"https://developer.mozilla.org/en-US/docs/Web/OpenSearch\"\n  }, \"MDN OpenSearch Docs\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    target: \"_blank\",\n    href: \"https://www.chromium.org/tab-to-search\"\n  }, \"The Chromium Projects: Tab to Search\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    target: \"_blank\",\n    href: \"https://developer.apple.com/library/archive/releasenotes/General/WhatsNewInSafari/Articles/Safari_8_0.html\"\n  }, \"Safari 8.0 Release Notes: Quick Website Search\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    target: \"_blank\",\n    href: \"https://docs.microsoft.com/en-us/microsoft-edge/dev-guide/browser-features/search-provider-discovery\"\n  }, \"Microsoft Edge Dev Guide: Search provider discovery\"))), mdx(\"hr\", null), mdx(\"p\", null, \"Thanks for reading!\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Find me on \", mdx(\"a\", {\n    href: \"https://github.com/virajvchavan\",\n    target: \"_blank\"\n  }, \"Github\"), \"/\", mdx(\"a\", {\n    href: \"https://www.linkedin.com/in/virajvchavan/\",\n    target: \"_blank\"\n  }, \"LinkedIn\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","tags":["search-engines","web browsers","web development"],"draft":false,"excerpt":"You might have searched for YouTube videos directly from Chrome’s Omnibar. Implement similar functionality for your website.","image_url":""}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"e43ffe81-ea14-52bc-aa71-43a284e8bb3d"}}}